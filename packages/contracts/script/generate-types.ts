import { execSync } from 'child_process';
import fs from 'fs';
import path from 'path';

// Ensure the out directory exists
const outDir = path.join(__dirname, '../out');
if (!fs.existsSync(outDir)) {
  fs.mkdirSync(outDir, { recursive: true });
}

// Build the contracts to generate ABIs
console.log('Building contracts...');
execSync('forge build', { stdio: 'inherit' });

// Read the ABI
const abiPath = path.join(outDir, 'MiniToken.sol/MiniToken.json');
const abi = JSON.parse(fs.readFileSync(abiPath, 'utf8')).abi;

// Generate TypeScript types
const types = `// Generated by generate-types.ts
export const miniTokenABI = ${JSON.stringify(abi, null, 2)} as const;

export type MiniToken = typeof miniTokenABI;
`;

// Write the types to a file
const typesPath = path.join(__dirname, '../src/types.ts');
fs.writeFileSync(typesPath, types);

console.log('Types generated successfully!'); 